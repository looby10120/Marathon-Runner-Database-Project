{"filter":false,"title":"test_server.js","tooltip":"/test_server.js","undoManager":{"mark":39,"position":39,"stack":[[{"start":{"row":0,"column":0},"end":{"row":75,"column":1},"action":"insert","lines":["var http = require('http');","var debug = require('debug');","var app = require('./app');","","// get port from environment and store in express","","var port = normalizePort(process.env.PORT || '8000');","app.set('port', port);","","// create http server","","var server = http.createServer(app);","","// listen on provided port, on all network interfaces.","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","// normalize a port into a number, string, or false.","","function normalizePort(val){","    var port = parseInt(val, 10);","    ","    if(isNaN(port)){","        // named pipe","        return val;","    }","    ","    if(port >= 0){","        // port number","        return port;","    }","    ","    return false;","}","","/**"," * Event listener for HTTP server \"error\" event."," */","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","  // handle specific listen errors with friendly messages","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","/**"," * Event listener for HTTP server \"listening\" event."," */","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}"],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":1},"action":"remove","lines":["var http = require('http');","var debug = require('debug');","var app = require('./app');","","// get port from environment and store in express","","var port = normalizePort(process.env.PORT || '8000');","app.set('port', port);","","// create http server","","var server = http.createServer(app);","","// listen on provided port, on all network interfaces.","","server.listen(port);","server.on('error', onError);","server.on('listening', onListening);","","// normalize a port into a number, string, or false.","","function normalizePort(val){","    var port = parseInt(val, 10);","    ","    if(isNaN(port)){","        // named pipe","        return val;","    }","    ","    if(port >= 0){","        // port number","        return port;","    }","    ","    return false;","}","","/**"," * Event listener for HTTP server \"error\" event."," */","","function onError(error) {","  if (error.syscall !== 'listen') {","    throw error;","  }","","  var bind = typeof port === 'string'","    ? 'Pipe ' + port","    : 'Port ' + port;","","  // handle specific listen errors with friendly messages","  switch (error.code) {","    case 'EACCES':","      console.error(bind + ' requires elevated privileges');","      process.exit(1);","      break;","    case 'EADDRINUSE':","      console.error(bind + ' is already in use');","      process.exit(1);","      break;","    default:","      throw error;","  }","}","","/**"," * Event listener for HTTP server \"listening\" event."," */","","function onListening() {","  var addr = server.address();","  var bind = typeof addr === 'string'","    ? 'pipe ' + addr","    : 'port ' + addr.port;","  debug('Listening on ' + bind);","}"],"id":6},{"start":{"row":0,"column":0},"end":{"row":4,"column":44},"action":"insert","lines":["var http = require('http');","http.createServer(function (req, res) {","    res.writeHead(200, {'Content-Type': 'text/plain'});","    res.end('Hello World\\n');","}).listen(process.env.PORT, process.env.IP);"]}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":42},"action":"remove","lines":["process.env.PORT, process.env.IP"],"id":7},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["8"]}],[{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["0"],"id":8}],[{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["0"],"id":9}],[{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"insert","lines":["0"],"id":10}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":16},"action":"remove","lines":["var http = require('http');","http.createServer(function (req, res) {","    res.writeHead(200, {'Content-Type': 'text/plain'});","    res.end('Hello World\\n');","}).listen(8000);"],"id":11},{"start":{"row":0,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["//","// # SimpleServer","//","// A simple chat server using Socket.IO, Express, and Async.","//","var http = require('http');","var path = require('path');","","var async = require('async');","var socketio = require('socket.io');","var express = require('express');","","//","// ## SimpleServer `SimpleServer(obj)`","//","// Creates a new instance of SimpleServer with the following options:","//  * `port` - The HTTP port to listen on. If `process.env.PORT` is set, _it overrides this value_.","//","var router = express();","var server = http.createServer(router);","var io = socketio.listen(server);","","router.use(express.static(path.resolve(__dirname, 'client')));","","server.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){","  var addr = server.address();","  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);","});",""]}],[{"start":{"row":20,"column":33},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":12}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":13}],[{"start":{"row":22,"column":0},"end":{"row":24,"column":49},"action":"insert","lines":["app.set('port', process.env.PORT || 3000);","var server = app.listen(app.get('port'));","var io     = require('socket.io').listen(server);"],"id":14}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":["v"],"id":16}],[{"start":{"row":21,"column":1},"end":{"row":21,"column":2},"action":"insert","lines":["a"],"id":17}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":3},"action":"insert","lines":["r"],"id":18}],[{"start":{"row":21,"column":3},"end":{"row":21,"column":4},"action":"insert","lines":[" "],"id":19}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"insert","lines":["a"],"id":20}],[{"start":{"row":21,"column":5},"end":{"row":21,"column":6},"action":"insert","lines":["p"],"id":21}],[{"start":{"row":21,"column":6},"end":{"row":21,"column":7},"action":"insert","lines":["p"],"id":22}],[{"start":{"row":21,"column":7},"end":{"row":21,"column":8},"action":"insert","lines":[" "],"id":23}],[{"start":{"row":21,"column":8},"end":{"row":21,"column":9},"action":"insert","lines":["="],"id":24}],[{"start":{"row":21,"column":9},"end":{"row":21,"column":10},"action":"insert","lines":[" "],"id":25}],[{"start":{"row":21,"column":10},"end":{"row":21,"column":11},"action":"insert","lines":["e"],"id":26}],[{"start":{"row":21,"column":11},"end":{"row":21,"column":12},"action":"insert","lines":["x"],"id":27}],[{"start":{"row":21,"column":12},"end":{"row":21,"column":13},"action":"insert","lines":["p"],"id":28}],[{"start":{"row":21,"column":10},"end":{"row":21,"column":13},"action":"remove","lines":["exp"],"id":29},{"start":{"row":21,"column":10},"end":{"row":21,"column":17},"action":"insert","lines":["express"]}],[{"start":{"row":21,"column":17},"end":{"row":21,"column":19},"action":"insert","lines":["()"],"id":30}],[{"start":{"row":21,"column":19},"end":{"row":21,"column":20},"action":"insert","lines":[";"],"id":31}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":33},"action":"remove","lines":["require('socket.io')"],"id":32},{"start":{"row":25,"column":13},"end":{"row":25,"column":21},"action":"insert","lines":["socketio"]}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":["/"],"id":33}],[{"start":{"row":29,"column":1},"end":{"row":29,"column":2},"action":"insert","lines":["*"],"id":34}],[{"start":{"row":32,"column":3},"end":{"row":32,"column":4},"action":"insert","lines":["*"],"id":35}],[{"start":{"row":32,"column":4},"end":{"row":32,"column":5},"action":"insert","lines":["/"],"id":36}],[{"start":{"row":23,"column":0},"end":{"row":25,"column":37},"action":"remove","lines":["app.set('port', process.env.PORT || 3000);","var server = app.listen(app.get('port'));","var io     = socketio.listen(server);"],"id":37}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":38}],[{"start":{"row":21,"column":20},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":39}],[{"start":{"row":25,"column":1},"end":{"row":25,"column":2},"action":"remove","lines":["*"],"id":40}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":1},"action":"remove","lines":["/"],"id":41}],[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"remove","lines":["/"],"id":42}],[{"start":{"row":28,"column":3},"end":{"row":28,"column":4},"action":"remove","lines":["*"],"id":43}],[{"start":{"row":0,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["//","// # SimpleServer","//","// A simple chat server using Socket.IO, Express, and Async.","//","var http = require('http');","var path = require('path');","","var async = require('async');","var socketio = require('socket.io');","var express = require('express');","","//","// ## SimpleServer `SimpleServer(obj)`","//","// Creates a new instance of SimpleServer with the following options:","//  * `port` - The HTTP port to listen on. If `process.env.PORT` is set, _it overrides this value_.","//","var router = express();","var server = http.createServer(router);","var io = socketio.listen(server);","var app = express();","","router.use(express.static(path.resolve(__dirname, 'client')));","","server.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){","  var addr = server.address();","  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);","});",""],"id":44},{"start":{"row":0,"column":0},"end":{"row":10,"column":3},"action":"insert","lines":["var express = require('express');","var app = express();","","app.get('/', function (req, res) {","  res.send(\"<h1>hello world</h1>\");","});","","app.listen(8080, function () {","  console.log('Example app listening on port 8080!');","  //call this app from https://<workspace name>-<user name>.c9users.io","});"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":10,"column":3},"end":{"row":10,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"mode":"ace/mode/javascript"}},"timestamp":1523801777969,"hash":"e1d413b275cc7e38ee281ecf0644f57aee3ebdb1"}